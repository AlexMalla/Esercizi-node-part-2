Eseecizio 6
#Create a database and Prisma model

Esercizio 7
#Retrieve all resources

In this exercise you'll build on what you created in 'Unit 12, Exercise 1: Create a database and Prisma model'.

Add a route to your API that retrieves all resources.

Esercizio 8
#Create a resource

Add a route to your API that creates a resource. The route should validate the request body data.

Esercizio 9
#Retrieve, update and delete a resource

Add routes to your API for retrieving, updating and deleting a resource.

Esercizio 10
#Add support for CORS to your API

Configure your API to enable CORS for requests from the origin http://localhost:8080.

Esercizio 11
#Handle file uploads

In this exercise you'll build on what you created in Exercise: Add support for CORS to your API'.

Create an HTML form that can upload a file, and add a route to your API that accepts that file and saves it to disk.

Esercizio 12
#Refactor your application

In this exercise you'll build on what you created in 'Exercise: Handle file uploads'.

Refactor your API application so that:

Application configuration is accessed via one module (config.ts).
The routes are in their own module and imported into app.ts.
All middleware are organised under a middleware directory, and imported where they're needed.

Esercizio 13
#Implement authentication
In this exercise you'll build on what you created in 'Exercise: Refactor your application'.

Implement authentication for your API. You should:

Integrate Passport, the GitHub2 Passport strategy and the Express session middleware.
Create a GitHub OAuth App and configure your application to use it.
Add routes for handling the login and logout process. Protect the POST, PUT and DELETE routes on your API.
Set a username on resources when they're created or updated.
Create a web page for adding a resource, so that you can test the authentication.

Esercizio 14
#Prepare your application for deployment

To get your application ready for deployment to production:

Configure the express-session middleware for production.
Add project usage instructions to the README.

Esercizio 15
#Deploy to Render

Deploy your API to the Render hosting service and configure it ready for production use.

Once you've deployed the API, add some resources.
Submit the URL for the GET route that returns all the API resources, for example, https://service-name.onrender.com/resources.


